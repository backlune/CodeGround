@using IO.Swagger.Model
@using BookStore.Web.Services
@page "/products"
@attribute [StreamRendering]

<PageTitle>Products</PageTitle>

<h1>Products</h1>


@if (_products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Description</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in _products)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Price</td>
                <td>@product.Description</td>
                <td><button type="button" class="btn btn-danger" onclick="@(async () => await DeleteProduct((Guid)product.Id))">Delete</button></td>
            </tr>
        }
        </tbody>
    </table>
}


@code {

    private List<ProductDto>? _products;


    protected override async Task OnInitializedAsync()
    {
        _products = await new ProductService().GetAllProductsAsync();
    }

    private async Task DeleteProduct(Guid productId)
    {
        await new ProductService().DeleteProductAsync(productId);
        this.StateHasChanged();
    }

}
