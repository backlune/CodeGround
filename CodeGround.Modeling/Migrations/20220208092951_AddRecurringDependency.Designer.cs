// <auto-generated />
using System;
using CodeGround.Modeling;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeGround.Modeling.Migrations
{
    [DbContext(typeof(InvoiceContext))]
    [Migration("20220208092951_AddRecurringDependency")]
    partial class AddRecurringDependency
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("GodeGround.Modeling.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("GodeGround.Modeling.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecurringInvoiceId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rounding")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sum")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Vat")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VatRate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RecurringInvoiceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("GodeGround.Modeling.Models.RecurringInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TemplateInvoiceId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TemplateInvoiceId")
                        .IsUnique();

                    b.ToTable("RecurringInvoices");
                });

            modelBuilder.Entity("GodeGround.Modeling.Models.Invoice", b =>
                {
                    b.HasOne("GodeGround.Modeling.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GodeGround.Modeling.Models.RecurringInvoice", "RecurringInvoice")
                        .WithMany("CreatedInvoices")
                        .HasForeignKey("RecurringInvoiceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("RecurringInvoice");
                });

            modelBuilder.Entity("GodeGround.Modeling.Models.RecurringInvoice", b =>
                {
                    b.HasOne("GodeGround.Modeling.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GodeGround.Modeling.Models.Invoice", "TemplateInvoice")
                        .WithOne("TemplateRecurringInvoice")
                        .HasForeignKey("GodeGround.Modeling.Models.RecurringInvoice", "TemplateInvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("GodeGround.Modeling.Models.RecurringInvoiceScheduling", "RecurringInvoiceScheduling", b1 =>
                        {
                            b1.Property<Guid>("RecurringInvoiceId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("CreateDaysBeforePublish")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("NumberOfOccurrances")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Occurrance")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("TEXT");

                            b1.HasKey("RecurringInvoiceId");

                            b1.ToTable("RecurringInvoices");

                            b1.WithOwner()
                                .HasForeignKey("RecurringInvoiceId");
                        });

                    b.Navigation("Company");

                    b.Navigation("RecurringInvoiceScheduling");

                    b.Navigation("TemplateInvoice");
                });

            modelBuilder.Entity("GodeGround.Modeling.Models.Invoice", b =>
                {
                    b.Navigation("TemplateRecurringInvoice");
                });

            modelBuilder.Entity("GodeGround.Modeling.Models.RecurringInvoice", b =>
                {
                    b.Navigation("CreatedInvoices");
                });
#pragma warning restore 612, 618
        }
    }
}
